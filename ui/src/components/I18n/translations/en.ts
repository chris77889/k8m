const enTranslation = `
CRD=CRD
K8M=K8M
k8m - AI driven k8s mini dashboard=k8m - AI driven k8s mini dashboard
事件=event
内存=memory
上限:=limit:
多集群管理:=MultiClusterMgm
驱逐=Drain
切换=handoff
存储=storage
检测=detect
网络=Internet
配置=disposition
多集群=Multi-clustering
个人中心=Personal Center
工作负载=Workloads
平台设置=Platform settings
当前集群=Current cluster
是否当前集群=Whether the cluster is current
访问控制=Access control
集群总览=Cluster overview
Helm应用=Helm app
上限 =upper limit
实时 =real time
请求 =request
 / 上限: = /Upper limit: 
 / 共计: = /Total: 
 / 可用: = /Available: 
 / 实时: = /Real time: 
请求: =Request: 
自动刷新：=Auto-refresh:
内存 （GiB）=Memory (GiB)
不自动刷新=Does not refresh automatically
CPU （cores）=CPU (cores)
v2=v2
contourdeployments=contourdeployments
foos=foos
jobs=jobs
pods=pods
grpcroutes=grpcroutes
backendlbpolicies=backendlbpolicies
batch=batch
nodes=nodes
roles=roles
tiers=third parties
node.k8s.io=node.k8s.io
baselineadminnetworkpolicies=baselineadminnetworkpolicies
namespaces=namespaces
priorityclasses=priorityclasses
stable.example.com=stable.example.com
sidecars=sidecars
clienttrafficpolicies=clienttrafficpolicies
uniteddeployments=uniteddeployments
controllerrevisions=controllerrevisions
sidecarsets=sidecarsets
felixconfigurations=felixconfigurations
csidrivers=csidrivers
policy.kruise.io=policy.kruise.io
prioritylevelconfigurations=prioritylevelconfigurations
coordination.k8s.io=coordination.k8s.io
workloadgroups=workloadgroups
workloadspreads=workloadspreads
resourcequotas=resourcequotas
configmaps=configmaps
apps.kruise.io=apps.kruise.io
globalnetworksets=globalnetworksets
requestauthentications=requestauthentications
virtualservices=virtualservices
persistentpodstates=persistentpodstates
workloadentries=workloadentries
apiregistration.k8s.io=apiregistration.k8s.io
udproutes=udproutes
tigerastatuses=tigerastatuses
tcproutes=tcproutes
destinationrules=destinationrules
poddisruptionbudgets=poddisruptionbudgets
authorizationpolicies=authorizationpolicies
apiextensions.k8s.io=apiextensions.k8s.io
security.istio.io=security.istio.io
services=services
referencegrants=referencegrants
certificatesigningrequests=certificatesigningrequests
extensionservices=extensionservices
discovery.k8s.io=discovery.k8s.io
networking.k8s.io=networking.k8s.io
certificates.k8s.io=certificates.k8s.io
ingressclasses=ingressclasses
hostendpoints=hostendpoints
validatingadmissionpolicies=validatingadmissionpolicies
resourcedistributions=resourcedistributions
stagednetworkpolicies=stagednetworkpolicies
flowschemas=flowschemas
gateway.envoyproxy.io=gateway.envoyproxy.io
proxyconfigs=proxyconfigs
bgpfilters=bgpfilters
httproutes=httproutes
apiservices=apiservices
nodeimages=nodeimages
events.k8s.io=events.k8s.io
customresourcedefinitions=customresourcedefinitions
caliconodestatuses=caliconodestatuses
clusterrolebindings=clusterrolebindings
secrets=secrets
backendtlspolicies=backendtlspolicies
envoypatchpolicies=envoypatchpolicies
ippools=ippools
metrics.k8s.io=metrics.k8s.io
cronjobs=cronjobs
crontabs=crontabs
backends=backends
envoyextensionpolicies=envoyextensionpolicies
apiservers=apiservers
wasmplugins=wasmplugins
limitranges=limitranges
componentstatuses=componentstatuses
endpoints=endpoints
events=events
persistentvolumeclaims=persistentvolumeclaims
persistentvolumes=persistentvolumes
podtemplates=podtemplates
replicationcontrollers=replicationcontrollers
serviceaccounts=serviceaccounts
mutatingwebhookconfigurations=mutatingwebhookconfigurations
validatingadmissionpolicybindings=validatingadmissionpolicybindings
validatingwebhookconfigurations=validatingwebhookconfigurations
daemonsets=daemonsets
deployments=deployments
replicasets=replicasets
statefulsets=statefulsets
advancedcronjobs=advancedcronjobs
broadcastjobs=broadcastjobs
clonesets=clonesets
containerrecreaterequests=containerrecreaterequests
imagelistpulljobs=imagelistpulljobs
imagepulljobs=imagepulljobs
nodepodprobes=nodepodprobes
podprobemarkers=podprobemarkers
v1beta1=v1beta1
autoscaling=autoscaling
horizontalpodautoscalers=horizontalpodautoscalers
leases=leases
bgpconfigurations=bgpconfigurations
bgppeers=bgppeers
blockaffinities=blockaffinities
clusterinformations=clusterinformation
globalnetworkpolicies=globalnetworkpolicies
ipamblocks=ipamblocks
ipamconfigs=ipamconfigs
ipamhandles=ipamhandles
ipreservations=ipreservations
kubecontrollersconfigurations=kubecontrollersconfigurations
networkpolicies=networkpolicies
networksets=networksets
stagedglobalnetworkpolicies=stagedglobalnetworkpolicies
stagedkubernetesnetworkpolicies=stagedkubernetesnetworkpolicies
endpointslices=endpointslices
example.com=example.com
extensions.istio.io=extensions.istio.io
flowcontrol.apiserver.k8s.io=flowcontrol.apiserver.k8s.io
backendtrafficpolicies=backendtrafficpolicies
envoyproxies=envoyproxies
httproutefilters=httproutefilters
securitypolicies=securitypolicies
gateway.networking.k8s.io=gateway.networking.k8s.io
v1alpha2=v1alpha2
v1alpha3=v1alpha3
gatewayclasses=gatewayclasses
gateways=gateways
tlsroutes=tlsroutes
networking.istio.io=networking.istio.io
envoyfilters=envoyfilters
serviceentries=serviceentries
ingresses=ingresses
runtimeclasses=runtimeclasses
gatewayapis=gatewayapis
goldmanes=goldmanes
imagesets=imagesets
installations=Facilities
managementclusterconnections=managementclusterconnections
whiskers=whiskers
policy=policy
podunavailablebudgets=podunavailablebudgets
adminnetworkpolicies=adminnetworkpolicies
projectcontour.io=projectcontour.io
contourconfigurations=outlineconfigurations
httpproxies=httpproxies
tlscertificatedelegations=TLSClsCertificateDelegations
clusterroles=clusterroles
rolebindings=rolebindings
scheduling.k8s.io=scheduling.k8s.io
peerauthentications=peerauthentications
csinodes=csinodes
csistoragecapacities=CSIsStorageCapacities
storageclasses=storageclasses
volumeattachments=volumeattachments
telemetry.istio.io=telemetry.istio.io
telemetries=Telemetry
A=A
B=B
C=C
D=D
E=E
F=F
G=G
H=H
I=I
J=J
K=K
L=L
M=M
N=N
P=P
R=R
S=S
T=T
U=U
V=V
W=W
退出=quit
活跃=active
N/A=N/A
Requested usage, maximum usage, and real-time usage=Requested usage, maximum usage, and real-time usage
CPU Usage (Cores)=CPU Usage (Cores)
Number of container groups=Number of container groups
Memory Usage (Gi)=Memory Usage (Gi)
内存用量(Gi)=Memory Usage (Gi)
CPU用量(核)=CPU Usage (Cores)
请求用量/上限用量/实时用量=Requested usage, maximum usage, and real-time usage
容器组数量=Number of container groups
Number of pods=Number of pods
K8S version=K8S version
Node role=Node role
Hardware configuration=Hardware configuration
Scheduling status=Scheduling status
unsullied=unsullied
IP resources=IP resources
Current/Available/Total=Current/Available/Total
Node architecture=Node architecture
operating system=operating system
IP=IP
驱逐=drain
控制平面=Control plane
节点隔离=Node isolation
解除隔离=Release from quarantine
调度正常=scheduleOK
输入IP=Enter the IP address
模糊搜索k、v=Fuzzy search k, v
污点=taint
节点=node
IP资源=IP resources
Pod数量=Number of pods
k8s版本=K8S version
当前/可用/总数=Current/Available/Total
操作系统=operating system
硬件配置=Hardware configuration
节点架构=Node architecture
节点角色=Node role
调度状态=Scheduling status
资源用量 kubectl top nodes=Resource usage: kubectl top nodes
关闭=close
AI解读=AI interpretation
Node=Node
arm64=arm64
节点终端=Node terminals
Event=Event
失败=Failure
正常=normal
拉取中=Pulling
退避中=Retreating
关联对象=Associative objects
AI 查询=AI queries
WebSocket Status: =null
Disconnected=null
Loading...=null
根据=according to
根据提供的Event信息=According to the event information provided
任务=task
部署=deploy
副本集=Replica sets
容器组=Container groups
定时任务=Scheduled tasks
有状态集=Stateful sets
守护进程集=Daemon set
Percentage of the maximum usage=Percentage of the maximum usage
ErrImagePull=null
Percentage of request usage=Percentage of request usage
Real-time usage percentage=Real-time usage percentage
自定义资源=Custom resources
CustomResourceDefinition=null
请先选择组=Please select a group first
组=group
作用域=scope
已激活=Activated
未激活=Deativated
条=item
whiskers.operator.tigera.io=null
apiservers.operator.tigera.io=null
crd.projectcalico.org=crd.projectcalico.org
StagedGlobalNetworkPolicy=null
AdminNetworkPolicy=null
gatewayapis.operator.tigera.io=null
stagedkubernetesnetworkpolicies.crd.projectcalico.org=null
adminnetworkpolicies.policy.networking.k8s.io=null
operator.tigera.io=operator.tigera.io
GatewayAPI=null
APIServer=null
goldmanes.operator.tigera.io=null
ManagementClusterConnection=null
managementclusterconnections.operator.tigera.io=null
stagedglobalnetworkpolicies.crd.projectcalico.org=null
policy.networking.k8s.io=policy.networking.k8s.io
v1alpha1=v1alpha1
BaselineAdminNetworkPolicy=null
baselineadminnetworkpolicies.policy.networking.k8s.io=null
StagedKubernetesNetworkPolicy=null
StagedNetworkPolicy=null
stagednetworkpolicies.crd.projectcalico.org=null
实例列表=List of instances
仓库=package
应用包=app packages
应用实例=app inst
Istio=Istio
排序=sort
显示列=Columns are displayed
密钥=Key
变更钩子=Change Hook
配置映射=Configuration Mapping
验证钩子=Validation hook
变更历史=Change History
应用版本=App version
最后更新=Last updated
chart包=chart package
查看=View
已部署=Deployed
卸载应用=Uninstall the app
应用=apply
弃用=Deprecated
归属仓库=Belong to the warehouse
最新版本=The latest version
输入应用名称=Enter an app name
k8s版本要求=K8s version requirements
cni=null
base=null
仓库名称=The name of the repository
新增仓库=Add a new warehouse
更新时间=Updated
索引时间=Indexing time
输入仓库名称=Enter a name for the warehouse
仓库URL=Repository URL
更新索引=Update the index
Repository URL=null
CronJob=null
暂停=Pause
保留策略=Retention policies
并发策略=Concurrency policy
最后调度=Final scheduling
调度计划=Scheduling plans
尽力型=Best-effort type
调度中=Scheduling
运行中=Running
容器网络=Container networking
资源用量 kubectl top pods -n xx=Resource usage kubectl top pods -n xx
容器组资源用量（ESC 关闭）=Container Group Resource Usage (ESC Off)
cpu（核）=CPU (core)
内存（Mi）=Memory (Mi)
展开=unfold
设定副本数=replicas
Deployment=Deployment
新增Deployment=New Deployment
容器=Container
Resource settings=Resource settings
选择deployment部署的命名空间=Select the namespace of the deployment
副本数量=Number of replicas
容器设置=Container settings
标签设置=Label settings
添加容器=Add containers
新增 Deployment 参数填写=Added Deployment parameters
允许数字、字母和'-'组成，不能以'-'和数字开头，不能以'-'结尾=Numbers, letters, and '-' are allowed, and cannot start with '-' and numbers, and cannot end with '-'
建议填写version: v1,如不需要可以删除=It is recommended to enter version: v1, if you do not need it, you can delete it
Pod副本的数量=The number of pod replicas
版本标签=Version labels
镜像名称=The name of the image
当前运行镜像=The image is currently running
镜像拉取密钥=Image pull key
镜像： nginx:1.19.6=Image: nginx:1.19.6
镜像拉取策略=Image pull policy
从不拉取=Never pull
始终拉取=Always pull
不存在时拉取=Pull when it doesn't exist
Container: =null
容器：=Container:
如: 500m 或 0.5=Such as: 500m or 0.5
CPU请求=CPU requests
CPU设置=CPU settings
CPU限制=CPU throttling
编辑资源限制=Edit resource limits
CPU请求/限制：未设置/100m=CPU Request/Limit: Not set/100m
内存请求=Memory requests
内存设置=Memory settings
内存限制=Memory limits
如: 1 或 1000m=Such as: 1 or 1000m
容器启动时请求的内存资源=The memory resource requested when the container starts
当前容器资源=Current container resources
如: 1Gi 或 2Gi=For example: 1Gi or 2Gi
内存请求/限制：未设置/64Mi=Memory Request/Limit: Not set/64Mi
更新资源限制=Update resource limits
容器启动时请求的CPU资源=The CPU resources requested when the container starts
容器最大可使用的CPU资源=The maximum CPU resources that can be used by the container
如: 512Mi 或 1Gi=Such as: 512Mi or 1Gi
容器最大可使用的内存资源=The maximum memory resources that can be used by the container
调整副本数量=Adjust the number of replicas
就绪检查端口号=Check the port number when ready
就绪检查路径，如：/ready=Ready check path, e.g. /ready
TCP端口=TCP port
TCP端口检查设置=TCP port check settings
需要检查的TCP端口号=The TCP port number that needs to be checked
添加参数=Add parameters
执行命令设置=Execute the command settings
请输入命令=Please enter the command
TCP端口检查=TCP port check
执行命令=Execute the command
HTTP请求=HTTP requests
4 results are available, use up and down arrow keys to navigate. Press Enter key to select.=null
ready=ready
副本=copy
扩缩容=Scaling
DaemonSet=null
当前状态=Current status
全选=Select all
local-path-storage=local-path-storage
12 results are available, use up and down arrow keys to navigate. Press Enter key to select.=null
停止=Stop
恢复=Resume
重启=Reboot
滚动更新=Rolling updates
envoy=null
Current status=Current status
调整资源限制=Adjust resource limits
设置环境变量=Set environment variables
不设置=Not set
存活探针=Survival probes
就绪探针=Ready probes
探针类型=Probe type
健康检查配置=Configure the health check
daemon=null
协议=agreement
新增=New
可选的自定义HTTP头信息=Optional custom HTTP header information
健康检查路径，如：/healthz=Health check path, for example, /healthz
失败阈值=Failure threshold
成功阈值=Success threshold
容器启动后等待多少秒开始探测=How many seconds to wait for the probe to start after the container is started
初始延迟秒数=The number of seconds of the initial delay
超时秒数=The number of seconds that have been timed out
健康检查端口号=The port number of the health check
HTTP请求设置=HTTP request settings
连续失败多少次标记为不健康=How many consecutive failures are marked as unhealthy
HTTP头信息=HTTP header information
HTTP路径=HTTP path
通用参数设置=General parameter settings
检测周期秒数=The number of seconds of the detection cycle
每次探测间隔多少秒=How many seconds are between each probe
探测超时时间（秒）=Probe timeout (seconds)
连续成功多少次标记为健康=How many successes in a row are marked as healthy
更新镜像=Update the image
查看事件   (ESC 关闭)=View Events (ESC Off)
原因=cause
告警=Alarm
说明=illustrate
AI问诊=AI Consultation
事件来源=The source of the event
关联字段=Associated fields
容器列表=List of containers
CPU资源=CPU resources
请求用量占比=Percentage of request usage
内存资源=Memory resources
保障等级=Level of coverage
实时用量占比=Real-time usage percentage
容器镜像=Container images
实时用量=Real-time usage
所在节点=node
模糊标签=Blur labels
容器组IP=IP address of the container group
精确标签=Precise labeling
网络类型=The type of network
资源用量=Resource usage
资源设定=Resource settings
选择状态=Select a status
重启次数=Number of restarts
模糊搜索label标签中的k、v=Fuzzy search for k and v in the label tag
选择保障等级=Select the level of coverage
容器名称=>镜像:版本=Container name = > image: version
CPU(m毫核)/内存(Mi)=CPU (mm-cores)Memory (Mi)
请求<设定<上限=The request < set a < cap
上限用量占比=Percentage of the maximum usage
刷新=flushed
点击选择显示列=Click Select Show columns
容器=container
进度=Progress
容忍度=Tolerance
所有者=owner
启动时间=Start-up time
已完成=Done
进行中=Ongoing
新增cm=Add  cm
回调定义=Callback definition
kruise-mutating-webhook-configuration=null
Callback definition=null
istio-sidecar-injector=null
istio-revision-tag-default=null
SVC服务=SVC Service
Ingress入口类=Ingress Entry Class
Ingress入口=Ingress Entry
Service=null
IP协议栈=IP protocol stack
外部地址=External address
访问地址=Access address
访问端口=Access ports
访问类型=Access type
内部流量策略=Internal traffic policies
IP协议栈集=IP stack set
POD选择器=POD selector
会话亲和性=Session affinity
无=not
全局模式=Global mode
单栈模式=Single-stack mode
双栈优先=Dual-stack first
访问端口[:节点端口]/协议 => 容器端口=Access port [:node port]/protocol = > container port
新增svc=SVC is added
域名=domain name
访问规则=Access rules
入口控制器=Ingress controllers
Ingress数量=Number of ingress
控制器名称=Controller name
存储类=Storage classes
持久卷声明=Persistent volume declarations
持久卷=Persistent volumes
申请容量=Request capacity
Persistent volumes=null
k8m-pvc=null
Request capacity=null
收起=Collapse
亲和性=Affinity
卷模式=Volume mode
PVC声明=PVC Statement
存储容积=Storage volume
存储类名称=The name of the storage class
访问模式=Access mode
输入PVC声明名称=Enter a name for the PVC declaration
已绑定=Bind
单路读写=Single-pass read/write
文件系统=file system
state=state
Access mode=null
Affinity=Affinity
Volume mode=null
Storage volume=null
PVC Statement=null
The name of the storage class=null
资源描述=Resource description
查看事件=View the event
供应者=provider
回收策略=Recycling policy
存储卷数量=Number of storage volumes
是否默认=Whether it defaults or not
存储卷声明数量=The number of storage volume declarations
卷绑定模式=Volume binding mode
延迟绑定=Delayed binding
standard=null
rancher.io/local-path=null
The number of storage volume declarations=null
Number of storage volumes=null
Whether it defaults or not=null
provider=null
Recycling policy=null
Volume binding mode=null
设为默认=Set as default
服务账户=Service Accounts
角色绑定=Character bindings
集群角色=Cluster roles
集群角色绑定=Cluster role binding
default=default
ClusterRole=null
rules=null
kruise-webhook-role=null
istio-ingressgateway-sds=null
eg-gateway-helm-infra-manager=null
eg-gateway-helm-leader-election-role=null
istio-egressgateway-sds=null
kruise-leader-election-role=null
kruise-daemon-secret-role=null
eg-gateway-helm-certgen=null
ClusterRoleBinding=null
主体=Subject
输入角色名称=Enter a name for the role
输入主体名称=Enter a name for the principal
租约=lease
CSI节点=CSI node
水平自动扩缩=Horizontal autoscaling
优先级类=Priority class
流量规则=Traffic rules
端点切片=Endpoint slices
组件状态=Component status
网络策略=Network Policies
资源配额=Resource quotas
运行时类=Runtime classes
Pod中断配置=Pod interrupt configuration
API 服务=API services
优先级配置=Priority configuration
就绪IP=Ready IP
未就绪IP=Not ready IP
端口=port
端点=endpoint
HorizontalPodAutoscaler=null
指标=index
目标=target
实例数=Number of instances
当前/预期=Current/Expected
副本数范围=Range of the number of replicas
指标名称 / 阈值 / 当前值=Metric Name / Threshold / Current Value
NetworkPolicy=null
ResourceQuota=null
规则=rules
生效范围=Effective Scope
配额范围=Quota range
LimitRange=null
request=null
limit=request=null
区间=interval
默认值=Default value
最大倍率=Maximum magnification
请求限制=Request throttling
限制范围=Scope of Limitations
输入命名空间=Enter a namespace
默认请求值=Default request value
PodDisruptionBudget=null
智检=Intelligent inspection
istio-ingressgateway=null
istio-egressgateway=null
istio-system=istio-system
istiod=null
Lease=null
策略=tactics
持续秒数=Lasts seconds
转换次数=The number of conversions
projectcontour=projectcontour
值=value
抢占策略=Preemption strategy
抢占=Seize
Preemption strategy=null
Yaml编辑=Yaml editing
Yaml管理=YAML management
文档=documentation
保 存=Preservation
查看编辑=View edits
RuntimeClass=null
CSINode=null
驱动=drive
kind-cluster-control-plane=kind-cluster-control-plane
Duration of existence=Duration of existence
APIService=null
就绪=ready
v1beta1.security.istio.io=null
v1alpha1.telemetry.istio.io=null
v1beta1.networking.istio.io=null
v1alpha1.extensions.istio.io=null
v1alpha1.policy.networking.k8s.io=null
v1.operator.tigera.io=null
v1.crd.projectcalico.org=null
v1.telemetry.istio.io=null
v1.security.istio.io=null
v1alpha3.networking.istio.io=null
FlowSchema=null
条件=condition
优先级名称=Priority name
匹配优先级=Match priority
区分器类型=Differentiator type
未就绪=Not ready
kube-scheduler=null
system-leader-election=null
Differentiator type=null
Priority name=null
kube-controller-manager=null
ByUser=null
endpoint-controller=null
ByNamespace=null
kube-system-service-accounts=null
probes=null
service-accounts=null
Match priority=null
condition=condition
PriorityLevelConfiguration=null
创建=create
标签=label
注解=note
存在时长=Duration of existence
并发权重=Concurrency weights
选取数量=Pick a quantity
队列上限=Queue cap
队列数量=Number of queues
强制删除=Forced deletion
属性文档=Doc
输入名称=Enter a name
Healthy:ok=null
scheduler=null
etcd-0=null
MCP管理=MCP management
单点登录=Single sign-on
参数设置=Parameter settings
集群巡检设置=Cluster inspection settings
指标显示翻转=The indicator shows a flip
请选择=Please select
命名空间=Namespace
可访问性=Accessibility
多集群管理=Multi-cluster management
纳管集群=Manage clusters
重新扫描=Rescan
集群地址=The address of the cluster
集群版本=Cluster version
输入集群名称=Enter a name for the cluster
证书有效期=Certificate expiration date
授权=authorization
文件=file
断开=disconnection
连接=connect
共4条=A total of 4 articles
已连接=Connected
数据库=database
未连接=Not connected
AI配置=AI configuration
产品名称=Product name
任意选择=Take your pick
内置参数=Built-in parameters
适当提升有助于提升回答完整度=Appropriate boosting can help improve the completeness of your answers
显示设置=Display settings
是否使用k8m内置AI大模型=Whether to use k8m's built-in AI large model
配置管理=Configuration management
集群配置=Cluster configuration
是否开启任意选择，默认开启=Whether to enable any selection is enabled by default
设置产品显示名称=Set the product display name
资源缓存时间=Resource caching time
自动对话轮数=Number of rounds of automatic conversation
上下文记忆=Contextual memory
配置加载顺序 启动参数->环境变量->数据库参数设置（界面配置）=Configuring the Loading Order Startup Parameters - > Environment Variables - > Database Parameter Settings (UI Configuration)
节点Shell镜像=Node shell image
以日志级别为例，启动参数设置2，环境变量设置3，界面配置4，那么最终生效日志级别为4=For example, if you set the startup parameter 2, environment variable 3, and UI 4, the final effective log level is 4
AI功能开关=AI function switch
是否启用AI功能，默认开启=Whether to enable the AI feature is enabled by default
适当的记忆量有助于提升回答精度=The right amount of memory can help improve the accuracy of your answers
界面展示实时用量、指标、Pod元数据等资源的缓存时间（单位：秒），默认60秒。时间越短，界面变化越快，但是会增加k8s系统负担。=The page displays the cache time (unit: seconds) of resources such as real-time usage, metrics, and pod metadata, which is 60 seconds by default. The shorter the time, the faster the interface changes, but it will increase the burden on the K8S system.
镜像拉取超时时间=The timeout period for image pulling
NodeShell 镜像。默认为 alpine:latest，必须包含nsenter命令=NodeShell image. The default is alpine:latest, which must include the nsenter command
Kubectl Shell镜像=Kubectl shell image
Kubectl Shell 镜像。默认为 bitnami/kubectl:latest，必须包含kubectl命令=Kubectl shell image. The default value is bitnami/kubectl:latest, which must contain the kubectl command
submit=null
提交=submit
默认模型=Default model
巡检汇总=Inspection summary
巡检规则=Inspection rules
巡检计划=Inspection plan
巡检记录=Inspection records
webhook管理=Webhook management
查 询=Enquiries
加载中...=Loading...
汇总数据：=Aggregate data:
全部集群=All clusters
起始时间=Start time
请选择日期=Please select a date
总执行次数：=Total number of executions:
总集群数：=Total number of clusters:
暂无集群数据=There is no cluster data
Feishu Group=null
Feishu group, old group=null
状态=state
集群=cluster
开始时间=Start time
结束时间=End time
触发类型=Trigger type
计划ID=Plan ID
错误数量=Number of errors
设置查询字段=Set the query field
AI总结=AI Summary
success=null
分组=grouping
版本=version
新建规则=Create a new rule
规则名称=The name of the rule
规则描述=Rule description
规则编码=Rule encoding
重置内置规则=Reset built-in rules
StatefulSet 合规性检查=StatefulSet compliance checks
PVC 合规性检查=PVC compliance checks
PersistentVolumeClaim 合规性检查=PersistentVolumeClaim compliance checks
检测 PVC Pending/Lost 状态、容量小于 1Gi、无 StorageClass。=Detects PVC Pending/Lost status, capacity less than 1Gi, and no StorageClass.
系统规则=System rules
Security ServiceAccount 默认账户使用检测=Security ServiceAccount defaults to account usage detection
1/3 共：30 项=1/3 of total: 30 items
检测 PV 是否为 Released/Failed 状态，及容量小于 1Gi。=Check whether the PV is in the Released/Failed state and the capacity is less than 1Gi.
Security Pod 安全上下文检测=Security Pod Security Context Detection
PersistentVolume 合规性检查=PersistentVolume compliance checks
检查 ValidatingWebhookConfiguration 的 webhook 指向的 Service 是否存在、是否有活跃 Pod、Pod 状态。=Check whether the service pointed to by the webhook of the ValidatingWebhookConfiguration exists, whether there are active pods, and the pod status.
StorageClass 合规性检查=StorageClass compliance checks
检测副本数为0且有 FailedCreate 的 ReplicaFailure。=Detects a ReplicaFailure with 0 replicas and FailedCreate.
ValidatingWebhookConfiguration 合规性检查=ValidatingWebhookConfiguration compliance checks
检测 StorageClass 是否使用了已废弃的 provisioner，及是否存在多个默认 StorageClass。=Detect if a StorageClass uses a deprecated provisioner and if there are multiple default StorageClasses.
检测 StatefulSet 关联的 Service、StorageClass 是否存在及 Pod 状态。=Check whether the Service and StorageClass associated with the StatefulSet exist, and the pod status.
检测 Pod 是否存在特权容器或缺少安全上下文。=Detect if a pod has a privileged container or is missing a security context.
Security RoleBinding 通配符检测=Security RoleBinding wildcard detection
检测 RoleBinding 关联的 Role 是否包含通配符权限。=Detect whether the Role associated with RoleBinding contains wildcard permissions.
检测 default ServiceAccount 是否被 Pod 使用。=Detect if the default ServiceAccount is being used by a pod.
ReplicaSet 合规性检查=ReplicaSet compliance checks
检查 PVC Pending 状态下的 ProvisioningFailed 事件。=Check for the ProvisioningFailed event in the PVC Pending state.
v1=v1
Pod=Pod
apps=apps
core=null
Builtin_ValidatingWebhook_030=null
Builtin_ReplicaSet_022=null
ServiceAccount=null
Rule encoding=null
The name of the rule=null
version=version
PersistentVolume=null
admissionregistration.k8s.io=admissionregistration.k8s.io
grouping=null
Builtin_Security_Pod_025=null
rbac.authorization.k8s.io=rbac.authorization.k8s.io
ReplicaSet=ReplicaSet
StorageClass=null
Rule description=null
ValidatingWebhookConfiguration=null
Builtin_PVC_029=null
PersistentVolumeClaim=null
Builtin_PV_028=null
Builtin_StorageClass_027=null
storage.k8s.io=storage.k8s.io
Builtin_StatefulSet_026=null
StatefulSet=StatefulSet
Builtin_Security_RoleBinding_024=null
RoleBinding=null
Builtin_Security_SA_023=null
Builtin_PVC_021=null
消息模板=Message templates
签名校验=Signature verification
新建Webhook=Create a webhook
目标URL=Destination URL
AI模型配置=AI model configuration
思考链=Chain of thought
模型名称=The name of the model
API 地址=API address
输入用户名=Enter a username
新建用户=Create a new user
用户管理=User management
禁用=disable
2FA状态=2FA status
CRM开发组,bdd,c,d=CRM Development Group, BDD, C, D
CRM开发组,普通=CRM Development Group, General
alice=null
rd-only=null
User groups=null
Username=null
source=null
新建用户  (ESC 关闭)=New User (ESC Off)
请输入用户名=Please enter a username
MCP服务器工具信息 - k8m=MCP Server Tool Information - k8m
参数=parameter
名称=name
通过YAML删除Kubernetes资源，等同于 'kubectl delete -f <yaml-file>' / Delete Kubernetes resources from YAML, equivalent to 'kubectl delete -f <yaml-file>'=<yaml-file>Deleting Kubernetes resources from YAML is equivalent to 'kubectl delete -f <yaml-file>'
设置节点为不可调度状态，等同于kubectl cordon <node> / Mark node as unschedulable, equivalent to kubectl cordon <node>=<node> Mark node as unschedulable, equivalent to kubectl cordon <node>
通过集群、命名空间和名称获取Kubernetes资源详情 / Retrieve Kubernetes resource details by cluster, namespace, and name=Retrieve Kubernetes resource details by cluster, namespace, and name
清空节点上的Pod并防止新的Pod调度，等同于kubectl drain <node> / Drain all pods from node and prevent new scheduling, equivalent to kubectl drain <node>=<node> Drain all pods from node and prevent new scheduling, equivalent to kubectl drain <node>
查询Deployment的HPA列表。对应kubectl命令: kubectl get hpa -n <namespace> | grep <deployment-name> / Query deployment HPA list. Equivalent kubectl command: kubectl get hpa -n <namespace> | grep <deployment-name>=Query the HPA list of the deployment. Corresponding kubectl command: kubectl get hpa -n <namespace> | grep <deployment-name> / Query deployment HPA list. Equivalent kubectl command: kubectl get hpa -n <namespace> | grep <deployment-name>
删除Pod中的指定文件 (类似命令: kubectl exec <pod-name> -n <namespace> -c <container> -- rm <path>) / Delete file in pod=Delete file in pod (similar command: kubectl exec <pod-name> -n <namespace> -c <container> -- rm) <path>/ Delete file in pod
通过集群、命名空间和名称删除Kubernetes资源 / Delete Kubernetes resource by cluster, namespace, and name=Delete Kubernetes resource by cluster, namespace, and name
为Kubernetes资源添加或删除注解 / Add or remove annotations for Kubernetes resource=Add or remove annotations for Kubernetes resource
通过YAML创建或更新Kubernetes资源，等同于 'kubectl apply -f <yaml-file>' / Apply Kubernetes resources from YAML, equivalent to 'kubectl apply -f <yaml-file>'=<yaml-file>Kubernetes resources from YAML, equivalent to 'kubectl apply -f <yaml-file>'
描述Pod容器组，(类似命令: kubectl describe pod -n <namespace> pod_name ) =Describe pod container group, (similar command: kubectl describe pod -n <namespace> pod_name ) 
是否启用=Whether it is enabled
发起人=sponsor
工具名称=The name of the tool
执行时间=Execution time
执行结果=Execution result
执行耗时=Time taken to execute
错误信息=error message
MCP执行记录=MCP execution records
前往=head for
跳转至=Jump to
request error: failed to list items type of []: field label not supported: metadata.labels.app=null
新建指标  (ESC 关闭)=New Indicator (ESC Off)
请输入指标名称，包含即为命中。如Pressure、Unavailable等=Please enter the name of the indicator, including it is a hit. For example, Pressure, Unavailable, etc
请输入指标的描述信息=Enter a description of the indicator
类型=type
新建配置=Create a new configuration
SSO配置管理=SSO configuration management
SSO（单点登录）配置用于设置外部认证服务，支持OIDC协议。启用后，用户可以通过外部认证服务登录系统。=SSO (Single Sign-On) configuration is used to set up external authentication services and supports the OIDC protocol. After enabled, users can log in to the system through an external authentication service.
回调地址=Callback address
配置名称=Configuration name
认证服务器=Authentication server
oidc=null
type=type
auth0=null
参数查看（ESC 关闭）=Parameter View (ESC Off)
http://IP地址:端口/auth/oidc/auth0/callback=http://IP address: port /auth/oidc/auth0/callback
请将下面的地址，填入认证服务器的回调地址中。=Enter the following address in the callback address of the authentication server.
请注意替换为可访问的IP（域名）、端口=Please note that the IP (domain name) and port that can be accessed are replaced
错误=mistake
规则数=Number of rules
最后运行=Finally run
目标集群=The destination cluster
计划名称=The name of the plan
新建巡检计划=Create an inspection plan
Cron表达式=Cron expression
ID=null
webhook=null
null=null
Cron expression=null
Finally run=null
The name of the plan=null
mistake=null
The destination cluster=null
Number of rules=null
查=examine
关闭=Shut down
专项巡检=special inspection
组名=Group name
角色=role
用户组管理=User group management
请选择角色=Please select a role
新建用户组=Create a user group
普通=ordinary
普通用户=Regular users
平台管理员=Platform Administrator
root=null
MCP=null
工具=tool
指南=guide
添加服务器=Add a server
温馨提示：MCP服务器启用后，在大模型对话中，会自动注册使用。=Tips: After the MCP server is enabled, it will be automatically registered for use in the large model dialogue.
服务器名称=The name of the server
服务器地址=Server address
编辑=edit
详情=detail
MCP导航=MCP navigation
启用=enable
搜索=Search
描述=description
重置=reset
指标名称=The name of the metric
新建指标=Create a new metric
状态指标管理=Status metrics management
输入描述=Enter a description
在Kubernetes资源的监控状态中，若指标类型（如DiskPressure、Unavailable等）的Status值为False，则代表该指标处于正常健康状态。例如：DiskPressure=False表示磁盘无压力，Unavailable=False表示服务可用。=If the Status value of a metric type (such as DiskPressure or Unavailable) is False in the monitoring status of a Kubernetes resource, the metric is in a healthy state. For example, DiskPressure=False indicates that the disk is under no pressure, and Unavailable=False indicates that the service is available.
应用规则：如果一个资源状态的类型，包含下表中的指标名称，则会翻转显示。=Apply rule: If the type of a resource status contains the metric name in the following table, it is flipped over.
输入指标名称=Enter a name for the indicator
开启=Open
批量删除=BulkDelete
每页显示=Displayed on each page
Slow=null
Error=null
Unavailable=null
Problem=null
The name of the metric=null
Pressure=null
operate=operate
enable=null
description=null
Creation time=null
我的集群=My cluster
开放MCP=Open MCP
来源=source
2步验证=MFA Verification
用户组=User groups
登录设置=Sign-in settings
绑定=bind
共1条=A total of 1
未启用= Not enabled
平台管理员组=Platform Administrators group
修改密码=Change your password
k8m=k8m
请输入访问链接用途描述=Please enter a description of the purpose of the access link
创建访问密钥=Create an access key
密钥值=The value of the key
API密钥=API key
1. API密钥用于程序化访问平台，可用于自动化脚本或第三方工具集成。=1. The API key is used for programmatic access to the platform and can be used for automation scripts or third-party tool integrations.
API密钥使用说明：=API Key Usage Instructions:
2. 密钥具有与当前用户相同的权限。=2. The key has the same permissions as the current user.
请输入密钥用途描述=Please enter a description of the purpose of the key
创建API密钥=Create an API key
权限=Permissions
授权人=Authorizer
用户名=Username
黑名单命名空间：=Blacklist namespace:
置空表示不限制，如果填写了，那么用户将不能访问该命名空间。黑名单可否定白名单。黑名单权限最高。=If you fill this in, users will not be able to access the namespace. The blacklist negates the whitelist. The blacklist has the highest permissions.
Exec权限：=Exec Permissions:
白名单命名空间=Whitelist namespace
授权时间=Authorization time
授权类型=Authorization Type
集群名称=The name of the cluster
集群权限=Cluster permissions
具有进入容器内，执行命令的权限=It has the permission to enter the container and execute commands
置空表示不限制，可访问该集群下所有的命名空间。如果填写了，那么用户就只能访问指定的命名空间了。=Empty indicates that all namespaces in the cluster can be accessed without restrictions. If so, the user will only be able to access the specified namespace.
我已经获得集群授权情况。权限解释：=I've been granted a cluster license. Permissions explained:
仅可查看集群资源信息，无法进行修改操作。=You can view only the cluster resource information and cannot modify it.
黑名单命名空间=Blacklist namespace
集群管理员：=Cluster Administrator:
可以管理和操作所有集群资源，包括创建、修改、删除、Exec等操作。=You can manage and operate all cluster resources, including create, modify, delete, and Exec.
集群只读：=Cluster read-only:
白名单命名空间：=Whitelist namespace:
授权类型：=Authorization Type:
可以为用户、用户组分别授权，当为用户组时，对组内所有用户生效操作。=You can grant permissions to users and user groups separately, and if they are user groups, the actions take effect on all users in the group.
暂无数据=No data yet
操作=operate
使用方法=How to use
创建密钥=Create a key
创建时间=Creation time
密钥ID=Key ID
描述信息=Descriptive information
开放MCP服务=Open the MCP service
查看使用说明=See instructions for use
删除=Delete
点击查看=Click to view
方式二：静态地址+Header=Method 2: Static address + Header
访问方式=How to access
在HTTP请求头中添加Header：=Add a header to the HTTP request header:
方式一: 动态地址=Method 1: Dynamic address
示例配置（JSON）=Example configuration (JSON)
取消=Cancel
确认=Confirm
关于=about
平台=platform
go版本=go version
版本号=version 
编译器=compiler
Git仓库=Git repository
Git提交=Git commit
Git标签=Git tags
编译时间=Compilation time
`;

export default enTranslation;
