// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package swagger

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/ai/model/delete/{ids}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "删除AI模型配置",
                "parameters": [
                    {
                        "type": "string",
                        "description": "模型ID，多个用逗号分隔",
                        "name": "ids",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/ai/model/id/{id}/think/{status}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "快速保存AI模型思考状态",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "模型ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "状态，例如：true、false",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/ai/model/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "获取AI模型配置列表",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/ai/model/save": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "创建或更新AI模型配置",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/ai/model/test/id/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "测试AI模型连接",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "模型ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/cluster/file/option_list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "获取文件类型的集群选项",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/mcp/connect/{name}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "连接指定MCP服务器",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MCP服务器名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/mcp/delete": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "删除MCP服务器",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/mcp/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "获取MCP服务器列表",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/mcp/log/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "获取MCP服务器日志列表",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/mcp/save": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "创建或更新MCP服务器",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/mcp/save/id/{id}/status/{status}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "快速保存MCP服务器状态",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "服务器ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "状态，例如：true、false",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/mcp/server/{name}/tools/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "获取指定MCP服务器的工具列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MCP服务器名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/mcp/tool/save/id/{id}/status/{status}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "快速保存MCP工具状态",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "工具ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "状态，例如：true、false",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "k8m API",
	Description: "请输入以 `Bearer ` 开头的 Token，例：Bearer xxxxxxxx。未列出接口请参考前端调用方法。",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
